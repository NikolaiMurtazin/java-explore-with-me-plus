DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS categories CASCADE;

CREATE TABLE IF NOT EXISTS users
(
    users_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    name     VARCHAR(250)                            NOT NULL,
    email    VARCHAR(254)                            NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS categories
(
    categories_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    name          VARCHAR(50)                             NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS location
(
    location_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    lat         DECIMAL                                 NOT NULL,
    lon         DECIMAL                                 NOT NULL,
);


CREATE TABLE IF NOT EXISTS events
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    annotation         VARCHAR(2000)                           NOT NULL,
    category_id        VARCHAR(50)                             NOT NULL,
    description        VARCHAR(7000)                           NOT NULL,
    event_date         TIMESTAMP                               NOT NULL,
    location_id        BIGINT                                  NOT NULL,
    created            TIMESTAMP                               NOT NULL,
    title              VARCHAR(120)                            NOT NULL,
    paid               BOOLEAN                                 NOT NULL,
    participant_limit  BIGINT                                  NOT NULL,
    request_moderation BOOLEAN                                 NOT NULL,
    state              VARCHAR(100)                            NOT NULL,
    initiator_id       BIGINT                                  NOT NULL,
    CONSTRAINT events_location FOREIGN KEY (location_id) REFERENCES location (location_id) ON DELETE CASCADE,
    CONSTRAINT category_names FOREIGN KEY (category_id) REFERENCES categories (categories_id) ON DELETE CASCADE,
    CONSTRAINT initiator_constraint FOREIGN KEY (initiator_id) REFERENCES users (users_id) ON DELETE CASCADE
);
